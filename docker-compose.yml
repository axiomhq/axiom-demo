version: '3.2'

volumes:
  postgres_data:
  minio_data:
  logs:

services:
  axiom-db:
    image: axiomhq/axiom-db:1.3.1
    environment:
      AXIOM_POSTGRES_URL: "postgres://axiom:axiom@postgres?sslmode=disable&connect_timeout=5"
      AXIOM_STORAGE: "minio://minio:9000/axiomdb/data?key=axiom&secret=axiomoixa&secure=false"
    depends_on:
      - minio
      - postgres
    restart: unless-stopped
  axiom-core:
    image: axiomhq/axiom-core:1.3.1
    environment:
      AXIOM_POSTGRES_URL: "postgres://axiom:axiom@postgres?sslmode=disable&connect_timeout=5"
      AXIOM_DB_URL: "http://axiom-db"
    ports:
      - 8080:80
    depends_on:
      - axiom-db
    restart: unless-stopped

  # Setup container (will exit after setup)
  setup:
    image: alpine:3
    environment:
      POSTGRES_URL: "postgres://axiom:axiom@postgres?sslmode=disable&connect_timeout=5"
    volumes:
      - ./setup.sh:/usr/bin/setup
      - ./dashboards:/usr/share/dashboards
      - ./monitors:/usr/share/monitors
    command: ["/usr/bin/setup"]

  # Postgres container + filebeat for logs + metricbeat for metrics
  postgres: 
    image: postgres:13-alpine
    environment:
      POSTGRES_USER: axiom
      POSTGRES_PASSWORD: axiom
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - logs:/usr/share/log
      - ./postgres/entrypoint.sh:/usr/local/bin/docker-entrypoint-override.sh
    entrypoint: ["/usr/local/bin/docker-entrypoint-override.sh"]
    command: ["postgres", "-c", "logging_collector=on", "-c", "log_statement=all", "-c", "log_directory=/usr/share/log/", "-c", "log_filename=postgres.log"]
  filebeat:
    build: filebeat
    command: ["-environment", "container"]
    environment:
      PERSONAL_ACCESS_TOKEN: 274dc2a2-5db4-4f8c-92a3-92e33bee92a8
    volumes:
      - logs:/usr/share/log:ro
    restart: unless-stopped

  # Minio container + tracer + axiom cli ingestors
  minio:
    image: minio/minio
    environment:
      MINIO_ACCESS_KEY: axiom
      MINIO_SECRET_KEY: axiomoixa
      MINIO_BROWSER: "on"
    entrypoint: sh
    command: -c 'mkdir -p /data/axiomdb && /usr/bin/minio server --json /data'
    volumes:
      - minio_data:/data
  minio-traces:
    image: minio/mc
    environment:
      MINIO_ACCESS_KEY: axiom
      MINIO_SECRET_KEY: axiomoixa
      MINIO_HOST: http://minio:9000
    entrypoint: ["/usr/bin/sh"]
    command: > 
      -c "microdnf install jq &&
      mc alias set minio $$MINIO_HOST $$MINIO_ACCESS_KEY $$MINIO_SECRET_KEY && 
      touch /usr/share/log/minio-traces.log && 
      mc admin trace minio --json -q | jq '.' --unbuffered -c > /usr/share/log/minio-traces.log"
    volumes:
      - logs:/usr/share/log
    restart: unless-stopped
  axiom-cli-minio-traces:
    image: axiomhq/cli:0.1.5
    environment:
      AXM_URL: http://axiom-core
      AXM_TOKEN: 274dc2a2-5db4-4f8c-92a3-92e33bee92a8
    entrypoint: ['sh']
    command: -c 'tail -f /usr/share/log/minio-traces.log | axiom ingest minio-traces --flush-every 1s --timestamp-field time'
    volumes:
      - logs:/usr/share/log:ro
    restart: unless-stopped

  # Axisynth
  axisynth:
    image: axiomhq/axisynth
    command: generate --schema /axisynth/schema.json
    environment:
      AXISYNTH_DATASET: http-logs
      AXISYNTH_TOKEN: 274dc2a2-5db4-4f8c-92a3-92e33bee92a8
      AXISYNTH_URL: http://axiom-core
      AXISYNTH_PARALLEL: 1
    volumes:
      - ./axisynth/schema.json:/axisynth/schema.json
    restart: unless-stopped

  ingest-webhook:
    image: python:3.9-alpine
    environment:
      AXM_URL: http://axiom-core
      AXM_TOKEN: 274dc2a2-5db4-4f8c-92a3-92e33bee92a8
      AXM_DATASET: incoming-webhooks
    entrypoint: ['sh']
    volumes: 
      - ./ingest-webhook:/app
    command: -c "cd /app && pip install pipenv && pipenv install && pipenv run python3 ingest_webhook.py"
    restart: unless-stopped

  loki-proxy:
    image: axiomhq/axiom-loki-proxy
    environment:
      AXIOM_DEPLOYMENT_URL: http://axiom-core
      AXIOM_ACCESS_TOKEN: 274dc2a2-5db4-4f8c-92a3-92e33bee92a8
